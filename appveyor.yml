version: '{build}'

image:
  - Ubuntu2204
  - macos

configuration: Release

platform:
  - x64

for:
-
  matrix:
    only:
      - image: macos
      - image: Previous macos  # not usually needed, but might use it while debugging
  install:
    - curl -Ls https://micro.mamba.pm/api/micromamba/osx-64/latest | tar -xvj bin/micromamba
    - mv bin/micromamba ./micromamba
-
  matrix:
    only:
      - image: Ubuntu2204
  install:
    - curl -Ls https://micro.mamba.pm/api/micromamba/linux-64/latest | tar -xvj bin/micromamba
    - mv bin/micromamba ./micromamba

build_script:
  # Diagnostics
  - echo $PLATFORM
  - echo $APPVEYOR_BUILD_WORKER_IMAGE
  - uname -a
  - pwd
  - ls
  - ./micromamba --version

  # Set up micromamba
  - ./micromamba shell init -s bash --root-prefix ~/micromamba
  - source ~/.bashrc
  - source ~/.profile
  - hash -r
  - mkdir -p ~/micromamba/pkgs/
  - mkdir -p ~/.mamba/pkgs/
  - export MAMBA_ROOT_PREFIX=~/micromamba
  - export MAMBA_EXE=$(pwd)/micromamba
  # The path of the script below is dependent on the micromamba version.
  # micromamba v1: $MAMBA_ROOT_PREFIX/etc/profile.d/micromamba.sh
  # micromamba v2: $MAMBA_ROOT_PREFIX/etc/profile.d/mamba.sh
  - . $MAMBA_ROOT_PREFIX/etc/profile.d/mamba.sh
  - micromamba create --yes --name avl --file environment.yml --channel conda-forge
  - micromamba activate avl
  - pip install --no-deps .
  - python3 -m pytest
